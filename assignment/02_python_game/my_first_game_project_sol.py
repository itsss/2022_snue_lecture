'''
실습파일에 포함된 예제 코드를 참고해서, 아래 코드를 완성하세요.

[Assignment]
캐릭터 외 이미지가 투명한 슈퍼마리오 캐릭터와 배경을 인터넷에서 다운로드받고, 각각 character.png, background.png로 저장합니다.
(파일 확장자가 jpg나 다른 확장자인 경우, 해당 확장자를 사용해도 무방합니다.)

다음과 같은 조건의 게임을 만들어 봅시다.
(1) 배경화면과 캐릭터의 사이즈가 적절히 세팅된 게임
(2) 방향키로 마리오를 이동할 수 있도록 설계된 게임
'''

# ===========================================================================
# TODO 1. pygame 라이브러리 불러오기: pygame이라는 라이브러리 명이 너무 기니 as라는 예약어로 이름을 pg로 바꾸어서 사용하세요.
import pygame as pg

# ===========================================================================
# TODO 2. pygame 초기화: pg.init() 으로 pygame을 초기화해 주세요.
pg.init()

# ===========================================================================
# TODO 3. 게임 화면 크기를 지정합니다. 구체적으로 가로(600) X 세로(600) 로 해 주세요.
screen = pg.display.set_mode((600, 600))

# ===========================================================================
# TODO 4. 게임 제목은, "서울교대 특강: 나만의 캐릭터 움직이기 게임" 으로 해 주세요.
pg.display.set_caption("서울교대 특강: 나만의 캐릭터 움직이기 게임")

# ===========================================================================
# TODO 5. pygame이 실행될 수 있도록 running 변수에 적절한 값을 넣어 주세요. 이곳에 들어가야 하는 값은 True / False 중 하나입니다.
# True / False는 부울(Bool) 이라는 이름으로도 불립니다!
running = True

# ===========================================================================
# TODO 6. background_img에 배경화면을 넣고, 가로(600) X 세로(600) 으로 바꾸어 주세요.
background_img = pg.image.load("background.png")
background_img = pg.transform.scale(background_img, (600, 600))

# ===========================================================================
# TODO 7. character에 캐릭터 이미지를 넣고, 가로(100) X 세로(100) 으로 바꾸어 주세요.
character = pg.image.load("character.png")
character = pg.transform.scale(character, (100, 100))

# ===========================================================================
# TODO 8. character_img_pos에 캐릭터의 좌푯값(x, y)을 얻을 수 있도록 코드를 작성하세요.
character_pos = character.get_rect()

while running:
    # ===========================================================================
    # TODO 9. 상하좌우 키보드가 동작 가능하도록 기능을 구현하세요. 세부적으로 다음 기능이 구현되어야 합니다.
    for event in pg.event.get():
        # ===========================================================================
        # TODO 9-1. 종료 기능: 종료 버튼을 누르면 무한 반복문을 빠져나오는 코드를 작성하여야 합니다.
        if event.type == pg.QUIT:
            running = False
        # ===========================================================================
        # TODO 9-2. 방향키 조작 기능: 방향키로 캐릭터를 이동할 수 있도록 게임을 설계하세요. 어떤 포지션(x or y) 이 바뀌어야 할 지 물음표를 채워 봅시다.
        elif event.type == pg.KEYDOWN: # 키가 눌렸을 때: KEYDOWN
            if event.key == pg.K_LEFT:
                character_pos.x -= 5
            elif event.key == pg.K_RIGHT:
                character_pos.x += 5
            elif event.key == pg.K_UP:
                character_pos.y -= 5
            elif event.key == pg.K_DOWN:
                character_pos.y += 5

    # ===========================================================================
    # TODO 10. 이미지를 추가할 때, “게임 화면에 전송” 해 주는  의미를 가지고 있는 코드는 무엇일까요?
    screen.blit(background_img, background_img.get_rect())
    screen.blit(character, character_pos)

    # ===========================================================================
    # TODO 11. 화면 업데이트(update) 하는 코드 작성
    pg.display.update()

# ===========================================================================
# TODO 12. 무한 반복문을 빠져나오면, 파이게임을 종료(quit)해주세요.
pg.quit()
